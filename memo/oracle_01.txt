< Oracle 개발 환경 >
1. Oracle Server:
- 단점: 파일로 저장할 수 없음, 수정이 용이하지 않음, 인텔리센스 기능 없음.
- 장점: 서버에서 바로 동작.
- 반드시 사용해야 하는 이유: 대부분의 DB서버는 CLI(Command-Line-Interface) 환경의 OS에서 운영됨.
- 우리과정에는 외부평가에서 IDE를 제공하지 않기 때문

2. IDE(통합개발환경): sqldeveloper 툴 등을 사용하는 방법
- 장점: 파일로 저장이 됨, 수정이 용이함, 인텔리센스 기능 있음.
- 단점: 서버에 바로 적용되지 않는 경우도 있음.


< Oracle 계정(사용자) >
1. 관리자 계정: sys, system
2. 일반 사용자 계정: 관리자가 아닌 일반 개발자가 사용하는 계정


< 사용자 계정 생성 >
- 관리자 권한으로 사용자 계정을 생성할 수 있음.
계정명: c##hm01
패스워드: 1234

1. 사용자 계정 생성과 권한 부여
-- oracle 11g의 방법
create user 계정명 identified by 패스워드;

-- oracle 12c 이후 버전에서 계정명 앞에 c##을 붙여서 계정명을 생성해야 한다.
create user c##계정명 identified by 패스워드;


- 계정 생성
create user c##hm01 identified by 1234;
- 권한 부여
grant connect, resource, dba to c##hm01;

-- 계정 삭제
drop user c##hm01;


< # oracle 12c 이후 버전에서 계정명에서 c##을 붙이지 않고 계정명을 생성하여 사용하는 방법 >
관리자 계정에서
// c##을 붙이지 않도록 하는 방법
alter session set"_ORACLE_SCRIPT"=true;

// 계정 생성, 권한 부여
create user hm01 identified by 1234;
grant connect, resource, dba to hm01;

// tablespace: 오라클에서 테이블을 포함한 객체를 생성하는 공간
// hm01 계정 테이블을 포함한 객체를 생성하는 공간을 무제한으로 풀어줌
alter user hm01 default tablespace users quota unlimited on users;

< Oracle 롤(role) 권한 >
- role: 권한의 묶음, oracle에만 있는 기능
- connect: 접속과 테이블 생성과 사용에 관한 권한의 묶음
- resource: oracle의 자원을 사용하는 권한의 묶음
- dba: 관리자 권한의 묶음


######################################################################
- DB(DataBase): 데이터의 집합
- DBMS(DataBase Management System): 데이터베이스 관리 시스템
- DBMS의 종류: 관계형 DBMS, 객체지향 DBMS, NO-SQL ...


RDBMS(Relational DataBase Management System): 관계형 데이터베이스 관리 시스템
RDBMS의 제품: Oracle, MySQL, MS-SQL(C언어), MariaDB, PostgerSQL ...
- 각 회사별로 표준 SQL 문법에 추가적인 문법(함수)을 적용해서 사용하고 있음.

SQL(Structured Query Language): 구조적인 질의(질문, 쿼리) 언어
- RDBMS에서 사용하는 언어


< SQL의 종류 >
1. DCL (Data Control Language): 데이터 제어어, 관리자에서 사용하는 명령들이 포함.
--> create user, grant, drop user ...

2. DDL (Data Definition Language): 데이터 정의어, 테이블, 뷰 등의 객체를 생성하는 명령들이 포함.
--> creat table, alter table, drop table ...

3. DML (Data Manipulation Language): 데이터 조작어, 데이터의 추가, 수정, 삭제, 조회 등의 명령들이 포함.
--> insert, update, delete, select, 개발자가 가장 많이 사용하는 언어.

4. TCL (Transaction Control Language): 트랜잭션과 관련된 명령들이 포함, 크게 보면 DCL에 포함되기도 함.
--> commit, rollback ...


- RDBMS(Relation DataBase Management System): 관계형 데이터베이스 관리 시스템
-- 테이블(table, 표) 형태로 데이터를 저장하는 데이터베이스 시스템

relation(개념) - table(물리)


< SQLPLUS 명령 > - Oracle에서만 사용되는 전용 명령
- show user; // 접속한 사용자를 확인
- @xxx.sql // xxx.sql 파일 안에 모든 명령을 실행
- ●select * from employee; // select 명령어
- set linesize 110; // 한 라인에 글자수를 110으로 설정, 기본값: 80
- set pagesize 20; // 한 페이지에 라인수를 20으로 설정, 기본값: 14
--> 위의 set 2개 값은 접속을 해제하면 기본값으로 돌아감. (매번 설정해야함)
- show linesize; // 설정된 라인의 글자수를 확인
- show pagesize; // 설정된 페이지의 라인수를 확인


[ spool 명령 정리 ]
- 시작: spool 파일명
- 끝: spool off



< RDBMS 용어 >
- table(테이블) - 데이터를 저장하는 공간, relation(릴레이션)
- field(필드) - 테이블을 구성하는 요소, attribute(속성)
- recode(레코드) - 1개의 데이터, tuple(튜플)
- degree(디그리, 차수) - 필드의 수
- cardinality(카디널리티, 기수) - 레코드(튜플)의 수



< 오라클 field의 데이터타입 > - 벤더(회사)마다 조금씩 다름.
1. 문자열 타입
- 문자와 문자열의 구분이 없음. 반드시 홀따옴표로 감쌈. ' '
-- char(크기): 고정형(숫자가 몇개로 딱 고정되어있다는 특별한 의미 부여할 때)
-- varchar2(크기): 가변형(일반적으로 씀) (★)

2. 숫자 타입
- number(크기): 정수, ex) number(5) -> 정수 5자리, number: 기본값, 정수 11자리 (★)
- number(크기, 소수점 자리수): 실수, ex) number(8, 2) -> 전체 8자리(소수점자리는 빼고), 소수점 2째자리 (★)

3. 날짜 타입
- date: 날짜와 시간을 표현 (★)
- timestamp: date 타입을 확장함, 밀리 세컨드로 표현 가능.
- 날짜 형식: 반드시 홀따옴표로 감쌈, 년월일은 /(-)로 구분, 시분초는 :(콜론)으로 구분.

4. 대량 데이터 타입(Oracle에만 있음)
- BLOB (Binary Large OBject): 대용량의 바이너리 데이터를 저장하는 타입, 최대크기: 4GB
- CLOB (Character Large OBject): 대용량의 문자 데이터를 저장하는 타입, 최대크기: 4GB



< null과 not null >
1. null : 입력하지 않아도 되는 필드에 함께 선언, not null을 사용하지 않으면 null
2. not null : 반드시 입력해야 필드에 함께 선언.



< emp.sql 파일의 3개 테이블 >
1. employee(사원) 테이블
- 8개의 필드로 구성
- eno(사원번호, 사번), ename(사원명), job(업무, 직무, 직책), manager(관리자, 상관의 사번),
  hiredate(입사일), salary(연봉), commission(성과금), dno(부서번호)

2. department(부서) 테이블
- 3개의 필드로 구성
- dno(부서번호), dname(부서명), loc(지역명)

3. salgrade(연봉 등급) 테이블
- 3개의 필드로 구성
- grade(연봉 등급), losal(최저 연봉), hisal(최고 연봉)



< SQL 규칙 >
- SQL문의 키워드는 대소문자를 구분하지 않는다. (수업은 편의상 소문자로 진행)
- 데이터는 대소문자를 반드시 구분한다.
- 문자와 문자열은 구분하지 않는다.
- 문자열은 반드시 홀따옴표로 감싼다.
- 날짜는 반드시 홀따옴표로 감싼다.



< SQL 학습 순서 >
- DML, SQLPLUS -> DDL, TCL -> DCL -> Procedure


< SELECT 문 >
- 6개의 절을 가짐,
- select와 from절은 필수, where, group by, having, order by는 생략 가능
- 반드시 순서는 지켜야 한다.

select 필드명, 필드명 ...
from 테이블명, 테이블명 ...
where 조건식
group by 그룹할 필드명
having 그룹에 대한 조건식
order by 정렬할 필드명

ex) 
// 테이블의 구조를 확인
desc employee;

* : select 다음에서 사용하게 되면 모든 필드라는 의미.
// 테이블의 데이터를 확인
select * from employee;

-> 해석: employee라는 테이블로부터 모든 필드를 검색해라.


< where 조건식에서 사용하는 연산자 >
1. 산술 연산자: + - * /(몫)
2. 비교 연산자: = (equal 같다), <> (not equal, !=, ^=), >, >=, <, <=
3. 논리 연산자: AND, OR, NOT


< null과 not null의 비교 >
- 반드시 is 연산자 사용해야 함


< like 연산자, 와일드 카드>
like 연산자는 where절에서만 쓴다
like 연산자: ~을 포함하는

와일드 카드
- %: 모든 문자.
- ex) 'A%': A로 시작하는 모든 문자, '%A': A로 끝나는 모든 문자, '%A%': A를 포함하는 모든 문자
- _(언더바): 한 문자
- ex) '__A%': 세번째 글자가 A인 모든 문자


< order by 절의 정렬 방법 >
// 문법
order by 필드명 asc | desc;
- ase: 오름차순, ascending의 약자, 기본값으로 생략 가능.
- desc: 내림차순, descending의 약자



오름 차순: 작은 값 -> 큰 값, ex) 가나다라순, ABCD순, 육상, 수영 결과
내림 차순: 큰 값 -> 작은 값, ex) 성적순, 야구 승률, 축구 승점 ...
